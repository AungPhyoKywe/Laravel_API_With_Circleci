# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#

version: 2

jobs:
  build:
    working_directory: ~/laravel
    docker:
      - image: notnoopci/php:7.1-apache-node
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_USER=root
          - MYSQL_PASSWORD=
          - MYSQL_ALLOW_EMPTY_PASSWORD=true
          - MYSQL_DATABASE=laravel_passport
    steps:
      - run:
          name: Install PHP extensions
          command: sudo docker-php-ext-install pdo_mysql
      - run:
          name: Install Composer
          command: 'curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer'
      - run:
          name: Display versions
          command: |
            php -v
            composer --version
      - checkout
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.json" }}
            - composer-v1-
      - run:
          name: Install project dependencies
          command: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.json" }}
          paths:
            - vendor
       - run:
          name: "Install Dependencies"
          command: composer install

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      # prepare the database
      - run:
          name: "Create Environment file and generate app key"
          command: |
            mv .env.testing .env
            php artisan key:generate

      - run:
          name: "Create database and run migration"
          command: |
            #  touch database/database.mysql
            php artisan migrate --env=testing

      - run:
          name: "Generate Passport encryption keys"
          command: php artisan passport:install

      # run tests with phpunit
      - run:
          name: "Run Tests"
          command: ./vendor/bin/phpunit


# version: 2
# jobs:
#   build:
#     docker:
#       # Specify the version you desire here
#       - image: circleci/php:7.4-node-browsers

#     steps:
#       - checkout

#       - run:
#           name: "Prepare Environment"
#           command: |
#             sudo apt update
#             sudo docker-php-ext-install zip

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             # "composer.lock" can be used if it is committed to the repo
#             - v1-dependencies-{{ checksum "composer.json" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-

#       - run:
#           name: "Install Dependencies"
#           command: composer install

#       - save_cache:
#           key: v1-dependencies-{{ checksum "composer.json" }}
#           paths:
#             - ./vendor

#       # prepare the database
#       - run:
#           name: "Create Environment file and generate app key"
#           command: |
#             mv .env.testing .env
#             php artisan key:generate

#       - run:
#           name: "Create database and run migration"
#           command: |
#             #  touch database/database.mysql
#             php artisan migrate --env=testing

#       - run:
#           name: "Generate Passport encryption keys"
#           command: php artisan passport:install

#       # run tests with phpunit
#       - run:
#           name: "Run Tests"
#           command: ./vendor/bin/phpunit
